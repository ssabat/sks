{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "sksmanagedsynapse"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"sksmanagedsynapse-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sksmanagedsynapse-WorkspaceDefaultSqlServer'"
		},
		"sksmanagedsynapse-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sksadlsgen2.dfs.core.windows.net"
		},
		"us-consumer-price-index_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'us-consumer-price-index'"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/CopyPipeline_edj')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy_edj",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "sampledata//Address.csv"
							},
							{
								"name": "Destination",
								"value": "sksmanagedsynapse//sksaddress.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_edj",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_edj",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-03T11:27:14Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_edj')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_edj')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline 1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-03T11:52:46Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/Dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Rule Based Dynamic Column Names')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "https://kromerbigdata.com/2019/05/24/adf-mapping-data-flows-create-rules-to-modify-column-names/",
				"activities": [
					{
						"name": "Rule Based Dynamic Column Names",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "RuleBasedDynamicColumnNames",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-03T12:06:51Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/RuleBasedDynamicColumnNames')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_edj')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "sksaddress.csv",
						"container": "sksmanagedsynapse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Json1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sksmanagedsynapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "mybook.json",
						"fileSystem": "sampledata"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sksmanagedsynapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/OutputContainer')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "rulebase.csv",
						"container": "sampledata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_edj')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Address.csv",
						"container": "sampledata"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "1",
						"type": "String"
					},
					{
						"name": "1970 Napa Ct.",
						"type": "String"
					},
					{
						"name": "Prop_2",
						"type": "String"
					},
					{
						"name": "Bothell",
						"type": "String"
					},
					{
						"name": "79",
						"type": "String"
					},
					{
						"name": "98011",
						"type": "String"
					},
					{
						"name": "E6100000010CAE8BFC28BCE4474067A89189898A5EC0",
						"type": "String"
					},
					{
						"name": "{9AADCB0D-36CF-483F-84D8-585C2D4EC6E9}",
						"type": "String"
					},
					{
						"name": "2007-12-04 00:00:00",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Xml1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "books.xml",
						"container": "sampledata"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/movie_dataflow_source1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "moviesDB.csv",
						"container": "sampledata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movie",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "Rotton Tomato",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sksmanagedsynapse-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('sksmanagedsynapse-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sksmanagedsynapse-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('sksmanagedsynapse-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/us-consumer-price-index')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('us-consumer-price-index_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0,
							"cleanup": true
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dataflow1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SourceDataset_edj",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DestinationDataset_edj",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          {1} as string,",
						"          {1970 Napa Ct.} as string,",
						"          Prop_2 as string,",
						"          Bothell as string,",
						"          {79} as string,",
						"          {98011} as string,",
						"          E6100000010CAE8BFC28BCE4474067A89189898A5EC0 as string,",
						"          {9AADCB0D-36CF-483F-84D8-585C2D4EC6E9} as string,",
						"          {2007-12-04 00:00:00} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          {1},",
						"          Street = {1970 Napa Ct.},",
						"          Prop_2,",
						"          Bothell,",
						"          {79},",
						"          {98011},",
						"          E6100000010CAE8BFC28BCE4474067A89189898A5EC0,",
						"          {9AADCB0D-36CF-483F-84D8-585C2D4EC6E9},",
						"          {2007-12-04 00:00:00}",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_edj')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_edj')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/RuleBasedDynamicColumnNames')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "movie_dataflow_source1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OutputContainer",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "RenameColumns"
						},
						{
							"name": "Casting"
						},
						{
							"name": "FixNames"
						},
						{
							"name": "RemoveOldNames"
						}
					],
					"scriptLines": [
						"source(output(",
						"          movie as string,",
						"          title as string,",
						"          genres as string,",
						"          year as string,",
						"          Rating as string,",
						"          {Rotton Tomato} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"FixNames derive(each(match(type=='string'), $$ + '_trimmed' = trim(toString($$))),",
						"          each(match(type=='integer'), 'int_' + $$ = toInteger($$))) ~> RenameColumns",
						"source1 derive(year = toInteger(year),",
						"          movie = toInteger(movie),",
						"          Rating = toInteger(Rating),",
						"          {Rotton Tomato} = toInteger({Rotton Tomato})) ~> Casting",
						"Casting select(mapColumn(",
						"          movie,",
						"          title,",
						"          genres,",
						"          year,",
						"          rating = Rating,",
						"          rottentomato = {Rotton Tomato}",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> FixNames",
						"RenameColumns select(mapColumn(",
						"          title_trimmed,",
						"          genres_trimmed,",
						"          int_movie,",
						"          int_year,",
						"          int_rating,",
						"          int_rottentomato",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> RemoveOldNames",
						"RemoveOldNames sink(allowSchemaDrift: true,",
						"     validateSchema: false) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/movie_dataflow_source1')]",
				"[concat(variables('workspaceId'), '/datasets/OutputContainer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Notebook 1')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "mysparkpool",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 1,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "true",
						"spark.dynamicAllocation.minExecutors": "1",
						"spark.dynamicAllocation.maxExecutors": "4",
						"spark.autotune.trackingId": "f9413505-2221-4a41-9d2b-3c31ff0bfacc"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_spark",
						"display_name": "Synapse Spark"
					},
					"language_info": {
						"name": "scala"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/222f1459-6ebd-4896-82ab-652d5f6883cf/resourceGroups/sksrg/providers/Microsoft.Synapse/workspaces/sksmanagedsynapse/bigDataPools/mysparkpool",
						"name": "mysparkpool",
						"type": "Spark",
						"endpoint": "https://sksmanagedsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/mysparkpool",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net",
							"authHeader": null
						},
						"sparkVersion": "3.2",
						"nodeCount": 10,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"val count = sc.parallelize(1 to 10).filter { _ =>\r\n",
							"  val x = math.random\r\n",
							"  val y = math.random\r\n",
							"  x*x + y*y < 1\r\n",
							"}.count()\r\n",
							"println(s\"Pi is roughly ${4.0 * count / 10 }\")"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 3
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Notebook 2')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "mysparkpool",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 1,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "true",
						"spark.dynamicAllocation.minExecutors": "1",
						"spark.dynamicAllocation.maxExecutors": "4",
						"spark.autotune.trackingId": "066aba82-3f9d-41a2-a623-b77d7c1c8a03"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1",
						"state": {
							"2cbb3c66-a353-4c52-81c9-f77a1d7027f2": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "S49E",
												"1": "SEHF01",
												"2": "CUURS49ESEHF01",
												"3": "2017",
												"4": "M12",
												"5": "279.974",
												"6": "nan",
												"7": "U",
												"8": "R",
												"9": "Electricity in San Diego-Carlsbad, CA, all urban consumers, not seasonally adjusted",
												"10": "Electricity",
												"11": "San Diego-Carlsbad, CA"
											},
											{
												"0": "S49E",
												"1": "SEHF01",
												"2": "CUURS49ESEHF01",
												"3": "2017",
												"4": "M12",
												"5": "279.974",
												"6": "nan",
												"7": "U",
												"8": "R",
												"9": "Electricity in San Diego-Carlsbad, CA, all urban consumers, not seasonally adjusted",
												"10": "Electricity",
												"11": "San Diego-Carlsbad, CA"
											},
											{
												"0": "S49E",
												"1": "SEHF01",
												"2": "CUURS49ESEHF01",
												"3": "2017",
												"4": "M12",
												"5": "279.974",
												"6": "nan",
												"7": "U",
												"8": "R",
												"9": "Electricity in San Diego-Carlsbad, CA, all urban consumers, not seasonally adjusted",
												"10": "Electricity",
												"11": "San Diego-Carlsbad, CA"
											},
											{
												"0": "S49E",
												"1": "SEHF01",
												"2": "CUURS49ESEHF01",
												"3": "2017",
												"4": "M12",
												"5": "279.974",
												"6": "nan",
												"7": "U",
												"8": "R",
												"9": "Electricity in San Diego-Carlsbad, CA, all urban consumers, not seasonally adjusted",
												"10": "Electricity",
												"11": "San Diego-Carlsbad, CA"
											},
											{
												"0": "S49E",
												"1": "SEHF01",
												"2": "CUURS49ESEHF01",
												"3": "2017",
												"4": "M12",
												"5": "279.974",
												"6": "nan",
												"7": "U",
												"8": "R",
												"9": "Electricity in San Diego-Carlsbad, CA, all urban consumers, not seasonally adjusted",
												"10": "Electricity",
												"11": "San Diego-Carlsbad, CA"
											},
											{
												"0": "S49E",
												"1": "SEHF01",
												"2": "CUURS49ESEHF01",
												"3": "2017",
												"4": "M12",
												"5": "279.974",
												"6": "nan",
												"7": "U",
												"8": "R",
												"9": "Electricity in San Diego-Carlsbad, CA, all urban consumers, not seasonally adjusted",
												"10": "Electricity",
												"11": "San Diego-Carlsbad, CA"
											},
											{
												"0": "S49E",
												"1": "SEHF01",
												"2": "CUURS49ESEHF01",
												"3": "2018",
												"4": "M01",
												"5": "284.456",
												"6": "nan",
												"7": "U",
												"8": "R",
												"9": "Electricity in San Diego-Carlsbad, CA, all urban consumers, not seasonally adjusted",
												"10": "Electricity",
												"11": "San Diego-Carlsbad, CA"
											},
											{
												"0": "S49E",
												"1": "SEHF01",
												"2": "CUURS49ESEHF01",
												"3": "2018",
												"4": "M01",
												"5": "284.456",
												"6": "nan",
												"7": "U",
												"8": "R",
												"9": "Electricity in San Diego-Carlsbad, CA, all urban consumers, not seasonally adjusted",
												"10": "Electricity",
												"11": "San Diego-Carlsbad, CA"
											},
											{
												"0": "S49E",
												"1": "SEHF01",
												"2": "CUURS49ESEHF01",
												"3": "2018",
												"4": "M01",
												"5": "284.456",
												"6": "nan",
												"7": "U",
												"8": "R",
												"9": "Electricity in San Diego-Carlsbad, CA, all urban consumers, not seasonally adjusted",
												"10": "Electricity",
												"11": "San Diego-Carlsbad, CA"
											},
											{
												"0": "S49E",
												"1": "SEHF01",
												"2": "CUURS49ESEHF01",
												"3": "2018",
												"4": "M01",
												"5": "284.456",
												"6": "nan",
												"7": "U",
												"8": "R",
												"9": "Electricity in San Diego-Carlsbad, CA, all urban consumers, not seasonally adjusted",
												"10": "Electricity",
												"11": "San Diego-Carlsbad, CA"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "area_code",
												"type": "string"
											},
											{
												"key": "1",
												"name": "item_code",
												"type": "string"
											},
											{
												"key": "2",
												"name": "series_id",
												"type": "string"
											},
											{
												"key": "3",
												"name": "year",
												"type": "int"
											},
											{
												"key": "4",
												"name": "period",
												"type": "string"
											},
											{
												"key": "5",
												"name": "value",
												"type": "float"
											},
											{
												"key": "6",
												"name": "footnote_codes",
												"type": "string"
											},
											{
												"key": "7",
												"name": "seasonal",
												"type": "string"
											},
											{
												"key": "8",
												"name": "periodicity_code",
												"type": "string"
											},
											{
												"key": "9",
												"name": "series_title",
												"type": "string"
											},
											{
												"key": "10",
												"name": "item_name",
												"type": "string"
											},
											{
												"key": "11",
												"name": "area_name",
												"type": "string"
											}
										],
										"truncated": false
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "sum",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"3"
											],
											"isStacked": false
										}
									}
								}
							}
						}
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/222f1459-6ebd-4896-82ab-652d5f6883cf/resourceGroups/sksrg/providers/Microsoft.Synapse/workspaces/sksmanagedsynapse/bigDataPools/mysparkpool",
						"name": "mysparkpool",
						"type": "Spark",
						"endpoint": "https://sksmanagedsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/mysparkpool",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net",
							"authHeader": null
						},
						"sparkVersion": "3.2",
						"nodeCount": 10,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"collapsed": false
						},
						"source": [
							"from azureml.opendatasets import UsLaborCPI\n",
							"\n",
							"data = UsLaborCPI()\n",
							"df = data.to_spark_dataframe()\n",
							"# Display 10 rows\n",
							"display(df.limit(10))"
						],
						"attachments": null,
						"outputs": [],
						"execution_count": 1
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/mysparkpool')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 15
				},
				"autoScale": {
					"enabled": true,
					"maxNodeCount": 10,
					"minNodeCount": 3
				},
				"nodeCount": 10,
				"nodeSize": "Small",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.2",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": true,
				"annotations": []
			},
			"dependsOn": [],
			"location": "westus"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks",
			"apiVersion": "2019-06-01-preview",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/AzureBlobStorage763')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "/subscriptions/222f1459-6ebd-4896-82ab-652d5f6883cf/resourceGroups/sksrg/providers/Microsoft.Storage/storageAccounts/sksadlsgen2",
				"groupId": "blob",
				"fqdns": [
					"sksadlsgen2.blob.core.windows.net"
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/synapse-ws-custstgacct--sksmanagedsynapse-sksadlsgen2')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "/subscriptions/222f1459-6ebd-4896-82ab-652d5f6883cf/resourceGroups/sksrg/providers/Microsoft.Storage/storageAccounts/sksadlsgen2",
				"groupId": "dfs",
				"fqdns": [
					"sksadlsgen2.dfs.core.windows.net"
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/synapse-ws-sql--sksmanagedsynapse')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "/subscriptions/222f1459-6ebd-4896-82ab-652d5f6883cf/resourceGroups/sksrg/providers/Microsoft.Synapse/workspaces/sksmanagedsynapse",
				"groupId": "sql",
				"fqdns": [
					"sksmanagedsynapse.827d62de-0fbe-4378-b830-6df2fcf54654.sql.azuresynapse.net"
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/synapse-ws-sqlOnDemand--sksmanagedsynapse')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "/subscriptions/222f1459-6ebd-4896-82ab-652d5f6883cf/resourceGroups/sksrg/providers/Microsoft.Synapse/workspaces/sksmanagedsynapse",
				"groupId": "sqlOnDemand",
				"fqdns": [
					"sksmanagedsynapse-ondemand.827d62de-0fbe-4378-b830-6df2fcf54654.sql.azuresynapse.net"
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}